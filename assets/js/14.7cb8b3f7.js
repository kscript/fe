(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{340:function(v,a,t){"use strict";t.r(a);var _=t(3),r=Object(_.a)({},(function(){var v=this,a=v.$createElement,t=v._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[v._v("简单概述js的一些基础概念。\n")]),v._v(" "),t("h2",{attrs:{id:"js是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js是什么"}},[v._v("#")]),v._v(" js是什么?")]),v._v(" "),t("p",[v._v("js的全称是JavaScript, 是一种解释型、弱类型的脚本语言。"),t("br"),v._v("\n当js运行于浏览器环境时, 用于给用户提供一些交互效果, 提升用户体验, 其用途包括:"),t("br"),v._v("\n表单验证、网页内容控制、音频/视频控制、2D/3D动画、响应用户事件、与服务器端交互等。")]),v._v(" "),t("h2",{attrs:{id:"js有哪些基本要素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js有哪些基本要素"}},[v._v("#")]),v._v(" js有哪些基本要素?")]),v._v(" "),t("ul",[t("li",[v._v("数据类型")]),v._v(" "),t("li",[v._v("变量")]),v._v(" "),t("li",[v._v("表达式和运算符")]),v._v(" "),t("li",[v._v("语句和声明")]),v._v(" "),t("li",[v._v("函数")]),v._v(" "),t("li",[v._v("内置对象")]),v._v(" "),t("li",[v._v("...")])]),v._v(" "),t("h2",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[v._v("#")]),v._v(" 数据类型")]),v._v(" "),t("p",[v._v("js中的数据类型分为: 基本类型 和 引用类型 两种。基本类型存放于栈内存, 引用类型存放于堆内存。")]),v._v(" "),t("ul",[t("li",[v._v("值类型(基本类型):"),t("br"),v._v("\n字符串（String）、数字(Number)、布尔(Boolean)、对空（Null）、未定义（Undefined）、Symbol、BigInt。")]),v._v(" "),t("li",[v._v("引用数据类型:"),t("br"),v._v("\n对象(Object)、数组(Array)、函数(Function)。")])]),v._v(" "),t("blockquote",[t("p",[v._v("Symbol 是 ES6 引入了一种新的原始数据类型，表示独一无二的值。"),t("br"),v._v("\nBigInt 是尚处于标准化阶段的新类型, 表示比Number数据类型支持的范围更大的整数值(>2^53 - 1)")])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("兼容性提示")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[v._v("在使用 Symbol、BigInt 类型时, 需考虑其兼容性\n")])])])]),v._v(" "),t("h2",{attrs:{id:"变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[v._v("#")]),v._v(" 变量")]),v._v(" "),t("p",[v._v("变量是什么? 变量，就是一个用于存放值的容器。\n变量的使用可以参考示例:")]),v._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("var")]),v._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v("'tom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("var")]),v._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br")])]),t("h3",{attrs:{id:"变量声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量声明"}},[v._v("#")]),v._v(" 变量声明")]),v._v(" "),t("hr"),v._v(" "),t("ul",[t("li",[t("strong",[v._v("var")]),v._v(" 声明一个变量，可同时将其初始化为一个值。")]),v._v(" "),t("li",[t("strong",[v._v("let")]),v._v(" 声明一个块级本地变量，可同时将其初始化为一个值。")]),v._v(" "),t("li",[t("strong",[v._v("const")]),v._v(" 声明一个只读的命名常量。")])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("关于const声明的常量的说明")]),v._v(" "),t("p",[v._v("常量可以理解为是不可变的变量"),t("br"),v._v("\n引用类型的不可变是指: 指向堆内存的引用地址不可变")])]),v._v(" "),t("h3",{attrs:{id:"变量名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量名"}},[v._v("#")]),v._v(" 变量名")]),v._v(" "),t("hr"),v._v(" "),t("p",[v._v("一般使用以下四种进行组合:")]),v._v(" "),t("ul",[t("li",[v._v("大小写字母")]),v._v(" "),t("li",[v._v("$")]),v._v(" "),t("li",[v._v("_")]),v._v(" "),t("li",[v._v("数字0到9")])]),v._v(" "),t("p",[t("strong",[v._v("需要注意的是")]),v._v(":")]),v._v(" "),t("ul",[t("li",[v._v("数字不能为第一位")]),v._v(" "),t("li",[v._v("变量区分大小写")]),v._v(" "),t("li",[v._v("不能使用"),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Lexical_grammar#%E5%85%B3%E9%94%AE%E5%AD%97",target:"_blank",rel:"noopener noreferrer"}},[v._v("关键字和保留字"),t("OutboundLink")],1)]),v._v(" "),t("li",[v._v("尽量可读、有意义")])]),v._v(" "),t("p",[v._v("详细的命名规则说明参见: "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Variables#%E5%85%B3%E4%BA%8E%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E7%9A%84%E8%A7%84%E5%88%99",target:"_blank",rel:"noopener noreferrer"}},[v._v("关于变量命名的规则"),t("OutboundLink")],1)]),v._v(" "),t("h3",{attrs:{id:"变量值的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量值的类型"}},[v._v("#")]),v._v(" 变量值的类型")]),v._v(" "),t("hr"),v._v(" "),t("p",[v._v("参考"),t("a",{attrs:{href:"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"}},[v._v("数据类型")]),v._v("。")]),v._v(" "),t("h2",{attrs:{id:"表达式和运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表达式和运算符"}},[v._v("#")]),v._v(" 表达式和运算符")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("算术运算符")]),v._v(" "),t("blockquote",[t("p",[v._v("算术运算符以数值（字面量或变量）作为其操作数，并返回一个单个数值。标准算术运算符是加法（+），减法（-），乘法（*）和除法（/）。")])]),v._v(" "),t("ul",[t("li",[v._v("加减乘除 +-*/")]),v._v(" "),t("li",[v._v("取余 %")]),v._v(" "),t("li",[v._v("递增 ++")]),v._v(" "),t("li",[v._v("递减 --")]),v._v(" "),t("li",[v._v("幂 **")])]),v._v(" "),t("hr"),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[v._v(" + 除了用于数值求和, 还可用于连接字符串  \n ++ 和 -- 在前置/后置时, 得到的结果会有所不同.  \n 前置表示: 先运算再返回值, 后置表示: 先返回值再运算. 例如\n var a = 1;\n var b = 1;\n alert(++a); // 弹出2, a最终的值是2\n alert(b++); // 弹出1, b最终的值也是2\n")])])]),t("hr")]),v._v(" "),t("li",[t("p",[v._v("按位操作符")]),v._v(" "),t("blockquote",[t("p",[v._v("按位操作符（Bitwise operators） 将其操作数（operands）当作32位的比特序列（由0和1组成），而不是十进制、十六进制或八进制数值。例如，十进制数9，用二进制表示则为1001。按位操作符操作数字的二进制形式，但是返回值依然是标准的JavaScript数值。")])]),v._v(" "),t("ul",[t("li",[v._v("按位与&")]),v._v(" "),t("li",[v._v("按位或|")]),v._v(" "),t("li",[v._v("按位异或^")]),v._v(" "),t("li",[v._v("左移<<")]),v._v(" "),t("li",[v._v("有符号右移>>")]),v._v(" "),t("li",[v._v("无符号右移>>>")])])]),v._v(" "),t("li",[t("p",[v._v("赋值运算符")]),v._v(" "),t("blockquote",[t("p",[v._v("基本的赋值运算符是等号（=），该运算符把它右边的运算值赋给左边。即，x = y 把 y 的值赋给 x。 其他的赋值运算符通常是标准运算符的简写形式")])]),v._v(" "),t("ul",[t("li",[v._v("赋值=")]),v._v(" "),t("li",[v._v("加赋值+= 减赋值-= 乘赋值*= 除赋值/=")]),v._v(" "),t("li",[v._v("模赋值%=")]),v._v(" "),t("li",[v._v("指数赋值**=")]),v._v(" "),t("li",[v._v("左移赋值<<= 右移赋值>>=")]),v._v(" "),t("li",[v._v("无符号右移赋值>>>=")]),v._v(" "),t("li",[v._v("按位与赋值&=")]),v._v(" "),t("li",[v._v("按位或赋值|=")]),v._v(" "),t("li",[v._v("按位异或赋值^=")])]),v._v(" "),t("hr"),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[v._v(" =以外的运算符, 可以看做 运算并赋值的简写形式. 如:\n var a = 1;  \n a += 2;  \n 相当于 a = a + 2  \n")])])]),t("hr"),v._v(" "),t("p",[v._v("详细说明参见: "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Assignment_Operators#%E6%A6%82%E8%BF%B0",target:"_blank",rel:"noopener noreferrer"}},[v._v("赋值运算符概述"),t("OutboundLink")],1)])]),v._v(" "),t("li",[t("p",[v._v("逻辑运算符")]),v._v(" "),t("blockquote",[t("p",[v._v("逻辑运算符通常用于布尔型（逻辑）值。这种情况下，它们返回一个布尔值。然而，&& 和 || 运算符会返回一个指定操作数的值，因此，这些运算符也用于非布尔值。这时，它们也就会返回一个非布尔型值。")])]),v._v(" "),t("ul",[t("li",[v._v("逻辑与&&")]),v._v(" "),t("li",[v._v("逻辑或||")]),v._v(" "),t("li",[v._v("逻辑非!")])]),v._v(" "),t("h3",{attrs:{id:"短路计算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#短路计算"}},[v._v("#")]),v._v(" 短路计算")]),v._v(" "),t("p",[v._v("js中逻辑表达式的运算顺序是从左到右的, 如果表达式满足其中一条")]),v._v(" "),t("ul",[t("li",[v._v("逻辑运算符&&左侧结果为false")]),v._v(" "),t("li",[v._v("逻辑运算符||左侧结果为true")])]),v._v(" "),t("p",[v._v("那么由于已经不满足继续向右判定的条件, 导致其右侧的表达式将被忽略不再执行, 造成短路, 此时直接返回左侧结果(不一定是布尔类型)")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[v._v(" 逻辑或|| 通常被用来设定 参数/变量/对象属性 的默认值  \n 但在使用过程中需要注意: 如果想要默认值为true时, 用||将无法得到false  \n var a = false;\n var b = true;\n var c = a || true; // c的最终值是true\n var d = b || true; // d是最终值也是true\n")])])])]),v._v(" "),t("li",[t("p",[v._v("比较操作符")])])]),v._v(" "),t("blockquote",[t("p",[v._v("JavaScript 有两种比较方式：严格比较运算符和转换类型比较运算符。对于严格比较运算符（===）来说，仅当两个操作数的类型相同且值相等为 true，而对于被广泛使用的比较运算符（==）来说，会在进行比较之前，将两个操作数转换成相同的类型。对于关系运算符（比如 <=）来说，会先将操作数转为原始值，使它们类型相同，再进行比较运算。")])]),v._v(" "),t("h2",{attrs:{id:"语句和声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语句和声明"}},[v._v("#")]),v._v(" 语句和声明")]),v._v(" "),t("h2",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[v._v("#")]),v._v(" 函数")]),v._v(" "),t("h2",{attrs:{id:"内置对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内置对象"}},[v._v("#")]),v._v(" 内置对象")]),v._v(" "),t("h2",{attrs:{id:"浏览器api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器api"}},[v._v("#")]),v._v(" 浏览器API")])])}),[],!1,null,null,null);a.default=r.exports}}]);